task.wait(1.5)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local validKeys = {"MC=L1f4", "Gloob7XyzzXyl0pH", "Plonk9ZibbleWexQuorp",
"SkrunkleYibberPzht77", "ThwompZizzleXyzz98", "KrunkleWumb0Zortox",
"BlarghFlorpXyzz123", "WizzleQuorpBzzt00", "ThimbleZopGlorp999",
"SkronkQuibblerXyzzy", "NargleFwoopBlimfark", "SnizzleYorgleTzomp",
"WimblyGorkFnozz", "ThwibberZablooFlim", "QwozzleZortix99",
"GrimblyYorfZlortch", "JibberFnarbXorble77", "ThrozzlePlibZnozzle",
"FizzleSnorpYorg", "WompZluffGorp88", "XyzzXyzzWuzzle99",
"PlibberZootGloogle", "SnibberGibbleXyzzy", "FrizzleThumpXorp99",
"WozzleZnozzQuib", "GribbleYarbXorboz", "QwizzleNarbGlumph",
"SnargleZimFlibber", "BlimpZlunkXorp77", "ZorkleGlimbZnoot",
"JizzleThworpBlimm", "PzootZnarbQwibber", "XorbleGorkPlumph99",
"SnizzleWunkGorp88", "ThwonkXyzzGlorph77", "GrunklePlibberZorp",
"SnizzleThwumpXyzz", "WibbleZlortGimbly", "QuibblerZnarbXorp99",
"YarbGloobZimble", "FrozzleXyzzQuomp77", "SnibbleThumpXorboz",
"PlibberJibberXyzz", "WozzleXorpFlibber", "BlimfarkZimSnizzle",
"XorpZnarbWizzle99", "ThwumpGorpZorkle", "JizzleXyzzThwonk",
"ZablooSnorpGlorph", "XyzzyGloobZnarb77", "QwozzleThwibberPlib",
"WozzleJibberXorp99", "SnizzleGorpZnarb", "BlimpXyzzZimble",
"ZorkleQwibbleGlumph", "JizzleSnargleXorp", "PlibberThwumpZnarb",
"SnizzleXorpGloogle", "YarbZimblePlumph99", "FrozzleThwompZnozzle",
"SnibbleXyzzWizzle77", "ThwonkGorpZorp88", "ZnarbXorpGloogle99",
"QwozzleThwumpZlimp", "WozzleXyzzPlibber", "BlimfarkZnarbJibble",
"XorpPlumphQwibble77", "ThwumpXyzzySnargle", "JibbleWozzleGloogle",
"ZablooPlibberQwozzle", "XyzzyGorpZlimp99", "SnizzleJibbleWozzle",
"BlimpZnarbThwumpXyzzy", "ZorkleGlooglePlibber", "JizzleXorpFrozzle",
"PlibberSnizzleThwump", "SnizzleXyzzGloogle99", "YarbZimbleThwomp",
"FrozzlePlibberZnarb77", "SnibbleThwonkXorp", "PlibberJibberGloogle",
"WozzleXorpThwump99", "BlimfarkZimbleSnizzle", "XorpZnarbWizzle77",
"ThwumpGorpZorkle", "JizzleXyzzThwonkZabloo", "XyzzyGloobZnarb77",
"QwozzleThwibberPlib", "WozzleJibberXorp99", "SnizzleGorpZnarb",
"BlimpXyzzZimble", "ZorkleQwibbleGlumph", "JizzleSnargleXorp",
"PlibberThwumpZnarb", "SnizzleXorpGloogle", "YarbZimblePlumph99",
"FrozzleThwompZnozzle", "SnibbleXyzzWizzle77", "ThwonkGorpZorp88",
"ZnarbXorpGloogle99", "QwozzleThwumpZlimp", "WozzleXyzzPlibber",
"BlimfarkZnarbJibble", "XorpPlumphQwibble77", "ThwumpXyzzySnargle",
"JibbleWozzleGloogle", "ZablooPlibberQwozzle", "VIPKEY2s1","0", "VIPKEY1s1"}

-- Function to show options GUI
local function showOptionsGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 400, 0, 200)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BorderSizePixel = 2
    MainFrame.Parent = ScreenGui

    local OneClickButton = Instance.new("TextButton")
    OneClickButton.Size = UDim2.new(0.5, -1, 1, 0)
    OneClickButton.Position = UDim2.new(0, 0, 0, 0)
    OneClickButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    OneClickButton.Text = "ONE\nCLICK\nVERSION"
    OneClickButton.TextSize = 20
    OneClickButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    OneClickButton.Parent = MainFrame

    local WholeScriptButton = Instance.new("TextButton")
    WholeScriptButton.Size = UDim2.new(0.5, -1, 1, 0)
    WholeScriptButton.Position = UDim2.new(0.5, 1, 0, 0)
    WholeScriptButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    WholeScriptButton.Text = "WHOLE\nSCRIPT\nVERSION"
    WholeScriptButton.TextSize = 20
    WholeScriptButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    WholeScriptButton.Parent = MainFrame

    local function showBlackScreen()
        ScreenGui:Destroy()
        local BlackScreenGui = Instance.new("ScreenGui")
        local BlackScreenFrame = Instance.new("Frame")
        local SmileyFace = Instance.new("ImageLabel")

        BlackScreenGui.Parent = game.CoreGui
        BlackScreenGui.IgnoreGuiInset = true  

        BlackScreenFrame.Parent = BlackScreenGui
        BlackScreenFrame.Size = UDim2.new(1, 0, 1, 0)
        BlackScreenFrame.Position = UDim2.new(0, 0, 0, 0)
        BlackScreenFrame.BackgroundColor3 = Color3.new(0, 0, 0)
        BlackScreenFrame.BorderSizePixel = 0  

        SmileyFace.Parent = BlackScreenFrame
        SmileyFace.Size = UDim2.new(0, 100, 0, 100)
        SmileyFace.Position = UDim2.new(0.5, -50, 0.5, -50)
        SmileyFace.BackgroundTransparency = 1
        SmileyFace.Image = "rbxassetid://6034973920"

        local RotationTween = TweenService:Create(SmileyFace, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), {Rotation = 360})
        RotationTween:Play()

        task.delay(3, function()
            BlackScreenGui:Destroy()
        end)
    end

    OneClickButton.MouseButton1Click:Connect(function()
        

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer

Players = game:GetService("Players")
local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(Players.LocalPlayer.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		Players.LocalPlayer.Idled:Connect(function()
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
ANTIAFK = game.Players.LocalPlayer.Idled:connect(function()
					 game:FindService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
					 task.wait(1)
					 game:FindService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
					 end)


-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

-- Create Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 200, 0, 100)
MainFrame.Position = UDim2.new(0.5, -100, 0.5, -50)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Create Toggle Button
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 150, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -75, 0.5, -25)
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.Text = "OFF"
ToggleButton.TextSize = 20
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Parent = MainFrame

-- Create Minimized Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 20, 0, 20) -- Smaller button
CloseButton.Position = UDim2.new(1, -25, 0, 5) -- Tighter to the corner
CloseButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0) -- Slightly darker red
CloseButton.Text = "✕" -- Smaller "X" symbol
CloseButton.TextSize = 14 -- Smaller text
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Parent = MainFrame



-- Create Minimized GUI (Small Button at the Top)
local MinimizedGui = Instance.new("TextButton")
MinimizedGui.Size = UDim2.new(0, 100, 0, 30)
MinimizedGui.Position = UDim2.new(0.5, -50, 0, 5)
MinimizedGui.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MinimizedGui.Text = "SHOW GUI"
MinimizedGui.TextSize = 16
MinimizedGui.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizedGui.Visible = false
MinimizedGui.Parent = ScreenGui

-- Function to start/stop all scripts
local function toggleScripts(state)
    getgenv().gain = state
    getgenv().Sell = state
    getgenv().BuyWeight = state
    getgenv().BuyDNA = state
    getgenv().BuyAlter = state

    if state then
        -- Gain Muscle
        task.spawn(function()
            while getgenv().gain do
                local args = { [1] = { [1] = "GainMuscle" } }
                ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                task.wait(0.4)
            end
        end)

        -- Sell Muscle
        task.spawn(function()
            while getgenv().Sell do
                task.wait(2)
                local sellArgs = { [1] = { [1] = "SellMuscle" } }
                ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(sellArgs))
            end
        end)

        -- Buy Weight
        task.spawn(function()
            while getgenv().BuyWeight do
                for i = 2, 116 do
                    if not getgenv().BuyWeight then return end
                    local args = { [1] = {"BuyItem", "Income_Item", "Weight", i} }
                    ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.1)
                end
                task.wait(1)
            end
        end)

        -- Buy DNA
        task.spawn(function()
            while getgenv().BuyDNA do
                local stage = LocalPlayer.leaderstats:FindFirstChild("Stage") and LocalPlayer.leaderstats.Stage.Value or 0
                local maxDNA = 12 -- Default minimum
        
                if stage == 2 then maxDNA = 17
                elseif stage == 3 then maxDNA = 19
                elseif stage == 4 then maxDNA = 21
                elseif stage == 5 then maxDNA = 24
                elseif stage == 6 then maxDNA = 28
                elseif stage == 7 then maxDNA = 30
                elseif stage == 8 then maxDNA = 32
                elseif stage == 9 then maxDNA = 37
                elseif stage == 10 then maxDNA = 39
                elseif stage == 11 then maxDNA = 43
                elseif stage == 12 then maxDNA = 44
                elseif stage == 13 then maxDNA = 44
                elseif stage == 14 then maxDNA = 45
                elseif stage == 15 then maxDNA = 46
                elseif stage == 16 then maxDNA = 48
                elseif stage == 17 then maxDNA = 49
                elseif stage == 18 then maxDNA = 50
                elseif stage == 19 then maxDNA = 51
                elseif stage == 20 then maxDNA = 52
                elseif stage == 21 then maxDNA = 53
                elseif stage == 22 then maxDNA = 54
                elseif stage == 23 then maxDNA = 55
                elseif stage == 24 then maxDNA = 56
                elseif stage == 25 then maxDNA = 57
                elseif stage == 26 then maxDNA = 58
                elseif stage == 27 then maxDNA = 59
                elseif stage == 28 then maxDNA = 60
                elseif stage == 29 then maxDNA = 61
                elseif stage > 30 then maxDNA = 70
                end
        
                for i = 1, maxDNA do
                    if not getgenv().BuyDNA then return end
                    local args = { [1] = {"BuyItem", "Bag_Item", "DNA name", i} }
                    ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.1)
                end
                task.wait(1)
            end
        end)
        

        -- Buy Alter
        task.spawn(function()
            while getgenv().BuyAlter do
                for i = 1, 30 do
                    if not getgenv().BuyAlter then return end
                    local args = { [1] = {"BuyItem", "Rebirth_Item", "Rebirth1", i} }
                    ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.1)
                end
                task.wait(1)
            end
        end)
    end
end

-- Toggle Button Functionality
local toggled = false
ToggleButton.MouseButton1Click:Connect(function()
    toggled = not toggled
    toggleScripts(toggled)
    ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
    ToggleButton.Text = toggled and "ON" or "OFF"
end)

-- Close Button Functionality
CloseButton.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MinimizedGui.Visible = true
end)

-- Reopen Main GUI from Minimized Button
MinimizedGui.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MinimizedGui.Visible = false
end)

-- Dragging functionality for Main GUI
local dragging, dragInput, dragStart, startPos

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)
        showBlackScreen()
    end)

    WholeScriptButton.MouseButton1Click:Connect(function()
        showBlackScreen()
        task.wait()
        -- THIS 
-- SCRIPT
-- IS
-- MADE
-- BY 
-- ASAIYA
--
--
--
--
--
--
--
--
--
-- HEY! IF YOU'RE READING THIS, THEN THAT MEANS YOU'VE SUCCESSFULLY DEOBFUSCATED ASAIYA'S SCRIPT. TAKE CARE OF MY SCRIPT AND DON'T RUIN IT!
-- ALSO, KIRETSUKI IS A GIRL.
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/Zelerator/ASKID/refs/heads/main/ASAIYAUI'))()

local Window = Rayfield:CreateWindow({
    Name = "Asaiya No limit Lifting Simulator Script",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Script for NLLS",
    LoadingSubtitle = "Made by Asaiya",
    Theme = "Serenity", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Asaiya Hub"
    },
 
    Discord = {
       Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "https://discord.gg/A2mNjt4BAY", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key System",
       Subtitle = "Need key to open the script",
       Note = "Join my Discord to get the Key \nhttps://discord.gg/A2mNjt4BAY", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"MC=L1f4", "Gloob7XyzzXyl0pH", "Plonk9ZibbleWexQuorp",
       "SkrunkleYibberPzht77", "ThwompZizzleXyzz98", "KrunkleWumb0Zortox",
       "BlarghFlorpXyzz123", "WizzleQuorpBzzt00", "ThimbleZopGlorp999",
       "SkronkQuibblerXyzzy", "NargleFwoopBlimfark", "SnizzleYorgleTzomp",
       "WimblyGorkFnozz", "ThwibberZablooFlim", "QwozzleZortix99",
       "GrimblyYorfZlortch", "JibberFnarbXorble77", "ThrozzlePlibZnozzle",
       "FizzleSnorpYorg", "WompZluffGorp88", "XyzzXyzzWuzzle99",
       "PlibberZootGloogle", "SnibberGibbleXyzzy", "FrizzleThumpXorp99",
       "WozzleZnozzQuib", "GribbleYarbXorboz", "QwizzleNarbGlumph",
       "SnargleZimFlibber", "BlimpZlunkXorp77", "ZorkleGlimbZnoot",
       "JizzleThworpBlimm", "PzootZnarbQwibber", "XorbleGorkPlumph99",
       "SnizzleWunkGorp88", "ThwonkXyzzGlorph77", "GrunklePlibberZorp",
       "SnizzleThwumpXyzz", "WibbleZlortGimbly", "QuibblerZnarbXorp99",
       "YarbGloobZimble", "FrozzleXyzzQuomp77", "SnibbleThumpXorboz",
       "PlibberJibberXyzz", "WozzleXorpFlibber", "BlimfarkZimSnizzle",
       "XorpZnarbWizzle99", "ThwumpGorpZorkle", "JizzleXyzzThwonk",
       "ZablooSnorpGlorph", "XyzzyGloobZnarb77", "QwozzleThwibberPlib",
       "WozzleJibberXorp99", "SnizzleGorpZnarb", "BlimpXyzzZimble",
       "ZorkleQwibbleGlumph", "JizzleSnargleXorp", "PlibberThwumpZnarb",
       "SnizzleXorpGloogle", "YarbZimblePlumph99", "FrozzleThwompZnozzle",
       "SnibbleXyzzWizzle77", "ThwonkGorpZorp88", "ZnarbXorpGloogle99",
       "QwozzleThwumpZlimp", "WozzleXyzzPlibber", "BlimfarkZnarbJibble",
       "XorpPlumphQwibble77", "ThwumpXyzzySnargle", "JibbleWozzleGloogle",
       "ZablooPlibberQwozzle", "XyzzyGorpZlimp99", "SnizzleJibbleWozzle",
       "BlimpZnarbThwumpXyzzy", "ZorkleGlooglePlibber", "JizzleXorpFrozzle",
       "PlibberSnizzleThwump", "SnizzleXyzzGloogle99", "YarbZimbleThwomp",
       "FrozzlePlibberZnarb77", "SnibbleThwonkXorp", "PlibberJibberGloogle",
       "WozzleXorpThwump99", "BlimfarkZimbleSnizzle", "XorpZnarbWizzle77",
       "ThwumpGorpZorkle", "JizzleXyzzThwonkZabloo", "XyzzyGloobZnarb77",
       "QwozzleThwibberPlib", "WozzleJibberXorp99", "SnizzleGorpZnarb",
       "BlimpXyzzZimble", "ZorkleQwibbleGlumph", "JizzleSnargleXorp",
       "PlibberThwumpZnarb", "SnizzleXorpGloogle", "YarbZimblePlumph99",
       "FrozzleThwompZnozzle", "SnibbleXyzzWizzle77", "ThwonkGorpZorp88",
       "ZnarbXorpGloogle99", "QwozzleThwumpZlimp", "WozzleXyzzPlibber",
       "BlimfarkZnarbJibble", "XorpPlumphQwibble77", "ThwumpXyzzySnargle",
       "JibbleWozzleGloogle", "ZablooPlibberQwozzle", "XyzzyGorpZlimp99", "0", "VIP"}
        
    }
 })

 Rayfield:Notify({
    Title = "You are now Using WHOLE SCRIPT VERSION",
    Content = "THIS SCRIPT WAS MADE BY ASAIYA.",
    Duration = 3.5,
    Image = 4483362458,
 })

 local MainTab = Window:CreateTab("Automatics", nil) 
 local BloodTab = Window:CreateTab("Bloodline & island", nil) 
 local PlayerTab = Window:CreateTab("Players", nil)  
 local SetTab = Window:CreateTab("Settings", nil) 
 local MiscTab = Window:CreateTab("Information", nil) 
 local player = game.Players.LocalPlayer
local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

local teleportCFrame = CFrame.new(107, 1676, -1948)
local teleporting = false

local function TeleportLoop()
    while teleporting do
        if humanoidRootPart then
            humanoidRootPart.CFrame = teleportCFrame
        else
            humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        end
        task.wait(30)
    end
end

local Toggle = MainTab:CreateToggle({
    Name = "Gain Muscle + Sell If Full Storage (Normal Speed)",
    CurrentValue = false,
    Flag = "NormalDNA",
    Callback = function(Value)
        if Value then
            print("✅ Auto-Sell & Gain Muscle Enabled")
            _G.AutoSell = true
            _G.GainMuscle = true

            local replicatedStorage = game:GetService("ReplicatedStorage")
            local remoteEvent = replicatedStorage:WaitForChild("RemoteEvent")
            local player = game:GetService("Players").LocalPlayer
            local muscleStat = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Muscle") -- Change "Muscle" if needed

            local muscleHistory = {} -- Store the last 5 seconds of muscle values
            local historyLength = 5 -- Track the last 5 values (1 per second)

            -- Muscle Gaining Loop
            spawn(function()
                while _G.GainMuscle do
                    local args = {
                        [1] = {
                            [1] = "GainMuscle"
                        }
                    }
                    remoteEvent:FireServer(unpack(args))
                    task.wait(0.7) -- Gains muscle every 0.4 seconds
                end
            end)

            -- Auto-Sell Loop
            spawn(function()
                while _G.AutoSell do
                    task.wait(1) -- Check every 1 second

                    if muscleStat then
                        -- Add current muscle value to history
                        table.insert(muscleHistory, muscleStat.Value)
                        if #muscleHistory > historyLength then
                            table.remove(muscleHistory, 1) -- Keep history at 5 values max
                        end

                        -- Check if all stored values are the same
                        local allSame = true
                        for i = 2, #muscleHistory do
                            if muscleHistory[i] ~= muscleHistory[i - 1] then
                                allSame = false
                                break
                            end
                        end

                        if allSame and #muscleHistory >= historyLength then
                            -- No muscle gain for 5 seconds, sell!
                            print("⚡ No muscle gain detected for 5 seconds. Selling...")
                            local args = {
                                [1] = {
                                    [1] = "SellMuscle"
                                }
                            }
                            remoteEvent:FireServer(unpack(args))

                            -- Clear history after selling
                            muscleHistory = {}
                        end
                    else
                        print("❌ Muscle stat not found! Make sure the stat name is correct.")
                    end
                end
            end)
        else
            print("❌ Auto-Sell & Gain Muscle Disabled")
            _G.AutoSell = false
            _G.GainMuscle = false
        end
    end,
})

local Toggle = MainTab:CreateToggle({
    Name = "Gain Muscle + Sell If Full Storage (Fast Lifter Gamepass)",
    CurrentValue = false,
    Flag = "fastDNA",
    Callback = function(Value)
        if Value then
            print("✅ Auto-Sell & Gain Muscle Enabled")
            _G.AutoSell = true
            _G.GainMuscle = true

            local replicatedStorage = game:GetService("ReplicatedStorage")
            local remoteEvent = replicatedStorage:WaitForChild("RemoteEvent")
            local player = game:GetService("Players").LocalPlayer
            local muscleStat = player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Muscle") -- Change "Muscle" if needed

            local muscleHistory = {} -- Store the last 5 seconds of muscle values
            local historyLength = 5 -- Track the last 5 values (1 per second)

            -- Muscle Gaining Loop
            spawn(function()
                while _G.GainMuscle do
                    local args = {
                        [1] = {
                            [1] = "GainMuscle"
                        }
                    }
                    remoteEvent:FireServer(unpack(args))
                    task.wait(0.4) -- Gains muscle every 0.4 seconds
                end
            end)

            -- Auto-Sell Loop
            spawn(function()
                while _G.AutoSell do
                    task.wait(1) -- Check every 1 second

                    if muscleStat then
                        -- Add current muscle value to history
                        table.insert(muscleHistory, muscleStat.Value)
                        if #muscleHistory > historyLength then
                            table.remove(muscleHistory, 1) -- Keep history at 5 values max
                        end

                        -- Check if all stored values are the same
                        local allSame = true
                        for i = 2, #muscleHistory do
                            if muscleHistory[i] ~= muscleHistory[i - 1] then
                                allSame = false
                                break
                            end
                        end

                        if allSame and #muscleHistory >= historyLength then
                            -- No muscle gain for 5 seconds, sell!
                            print("⚡ No muscle gain detected for 5 seconds. Selling...")
                            local args = {
                                [1] = {
                                    [1] = "SellMuscle"
                                }
                            }
                            remoteEvent:FireServer(unpack(args))

                            -- Clear history after selling
                            muscleHistory = {}
                        end
                    else
                        print("❌ Muscle stat not found! Make sure the stat name is correct.")
                    end
                end
            end)
        else
            print("❌ Auto-Sell & Gain Muscle Disabled")
            _G.AutoSell = false
            _G.GainMuscle = false
        end
    end,
})



 

local selectedMode = "None"

local Dropdown = MainTab:CreateDropdown({
    Name = "Choose Gain Muscle (30+ FPS MINIMUM)",
    Options = {
        "None",
        "Gain Muscle (No Gamepass)",
        "Gain Muscle (Fast Lifter Gamepass, Ridiculously fast & Unsafe)",
        "Gain Muscle (Fast Lifter Gamepass, No RollBack & Safe)"
    },
    CurrentOption = {"None"},
    MultipleOptions = false,
    Flag = "Dropdown5",
    Callback = function(Option)
        -- Stop any existing loop before starting a new one
        getgenv().gain = false
        selectedMode = Option[1] -- Store the selected option
        
        -- Small wait to ensure previous loop stops completely
        task.wait(0.1)

        if selectedMode ~= "None" then
            getgenv().gain = true
            task.spawn(function()
                while getgenv().gain do
                    local args = {
                        [1] = {
                            [1] = "GainMuscle"
                        }
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))

                    -- Apply the correct wait time based on selection
                    if selectedMode == "Gain Muscle (No Gamepass)" then
                        task.wait(0.7)
                    elseif selectedMode == "Gain Muscle (Fast Lifter Gamepass, Ridiculously fast & Unsafe)" then
                        task.wait() -- No delay (instant execution)
                    elseif selectedMode == "Gain Muscle (Fast Lifter Gamepass, No RollBack & Safe)" then
                        task.wait(0.4)
                    end
                end
            end)
        end
    end
})


local selectedSellMode = "None"

local Dropdown = MainTab:CreateDropdown({
    Name = "Auto Sell Muscle",
    Options = {
        "None",
        "Instant",
        "Every 3 seconds",
        "Every 60 seconds",
        "Every 5 minutes",
        "Every 1 hour"
    },
    CurrentOption = {"None"},
    MultipleOptions = false,
    Flag = "DropdownSe6",
    Callback = function(Option)
        -- Stop any existing loop before starting a new one
        getgenv().Sell = false
        selectedSellMode = Option[1] -- Store the selected option

        -- Small wait to ensure previous loop stops completely
        task.wait(0.1)

        if selectedSellMode ~= "None" then
            getgenv().Sell = true
            task.spawn(function()
                local lastSellTime = tick() -- Get the current time
                local interval = 0
                    if selectedMode == "Instant" then
                        interval = 0.1
                elseif selectedSellMode == "Every 3 seconds" then
                    interval = 3
                elseif selectedSellMode == "Every 60 seconds" then
                    interval = 60
                elseif selectedSellMode == "Every 5 minutes" then
                    interval = 300
                elseif selectedSellMode == "Every 1 hour" then
                    interval = 3600
                end

                while getgenv().Sell do
                    if tick() - lastSellTime >= interval then
                        local args = {
                            [1] = {
                                [1] = "SellMuscle"
                            }
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                        lastSellTime = tick() -- Reset timer after selling
                    end
                    task.wait(0.1) -- Small wait to prevent unnecessary CPU usage
                end
            end)
        end
    end
})


 local Toggle = MainTab:CreateToggle({
    Name = "Auto buy Weight",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        getgenv().BuyWeight = Value
        while getgenv().BuyWeight do  -- Check the global value in each loop iteration
            for i = 2, 300 do
                if not getgenv().BuyWeight then return end -- Stop if the toggle is off
                print("Attempting to buy weight: ", i)
                local args = {
                    [1] = {"BuyItem", "Income_Item", "Weight", i}
                }
                game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                task.wait(0.1)
            end
            task.wait(2)
        end
    end
})




local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local Toggle = MainTab:CreateToggle({
    Name = "Smart DNA (Look Information Tab)",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        getgenv().BuyDNA = Value

        if Value then
            task.spawn(function()  -- Runs in a separate thread
                while getgenv().BuyDNA do
                    -- Get player's current stage
                    local stage = player.leaderstats:FindFirstChild("Stage") and player.leaderstats.Stage.Value or 0

                    -- Set max DNA purchase limit based on stage
                    local maxDNA = 12
                    if stage == 2 then maxDNA = 17
                    elseif stage == 3 then maxDNA = 19
                    elseif stage == 4 then maxDNA = 21
                    elseif stage == 5 then maxDNA = 24
                    elseif stage == 6 then maxDNA = 28
                    elseif stage == 7 then maxDNA = 30
                    elseif stage == 8 then maxDNA = 32
                    elseif stage == 9 then maxDNA = 37
                    elseif stage == 10 then maxDNA = 39
                    elseif stage == 11 then maxDNA = 43
                    elseif stage == 12 then maxDNA = 44
                    elseif stage == 13 then maxDNA = 44
                    elseif stage == 14 then maxDNA = 45
                    elseif stage == 15 then maxDNA = 46
                    elseif stage == 16 then maxDNA = 48
                    elseif stage == 17 then maxDNA = 49
                    elseif stage == 18 then maxDNA = 50
                    elseif stage == 19 then maxDNA = 51
                    elseif stage == 20 then maxDNA = 52
                    elseif stage == 21 then maxDNA = 53
                    elseif stage == 22 then maxDNA = 54
                    elseif stage == 23 then maxDNA = 55
                    elseif stage == 24 then maxDNA = 56
                    elseif stage == 25 then maxDNA = 57
                    elseif stage == 26 then maxDNA = 58
                    elseif stage == 27 then maxDNA = 59
                    elseif stage == 28 then maxDNA = 60
                    elseif stage == 29 then maxDNA = 61
                    elseif stage > 30 then maxDNA = 70
                    end

                    -- Loop through and buy DNA up to maxDNA
                    for i = 1, maxDNA do
                        if not getgenv().BuyDNA then return end -- Stops instantly

                        local args = {
                            [1] = {
                                [1] = "BuyItem",
                                [2] = "Bag_Item",
                                [3] = "DNA name",
                                [4] = i
                            }
                        }

                        ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                        task.wait(0.1)
                    end
                    task.wait(2)
                end
            end)
        end
    end
})



 

 local ReplicatedStorage = game:GetService("ReplicatedStorage")

 local Toggle = MainTab:CreateToggle({
    Name = "Auto Body Alter",
    CurrentValue = false,
    Flag = "Toggle7", 
    Callback = function(Value)
        getgenv().BuyAlter = Value

        while getgenv().BuyAlter do
            for i = 1, 30 do
                if not getgenv().BuyAlter then break end -- Exit loop if toggle is off

                local args = {
                    [1] = {
                        [1] = "BuyItem",
                        [2] = "Rebirth_Item",
                        [3] = "Rebirth1",
                        [4] = i
                    }
                }

                ReplicatedStorage:WaitForChild("RemoteEvent"):FireServer(unpack(args))
                wait(0.1) -- Prevents excessive requests
            end
            wait(5) -- Delay to prevent spamming the loop after the for loop completes
        end
    end
})

local Toggle = SetTab:CreateToggle({
    Name = "Anti AFK KICK",
    CurrentValue = false,
    Flag = "Toggle1000",
    Callback = function(Value)
        getgenv().antiafk = Value

        if Value then
            -- Run Anti-AFK logic only once
            local Players = game:GetService("Players")
            local VirtualUser = game:GetService("VirtualUser")

            local GC = getconnections or get_signal_cons
            if GC then
                for i, v in pairs(GC(Players.LocalPlayer.Idled)) do
                    if v.Disable then
                        v:Disable()
                    elseif v.Disconnect then
                        v:Disconnect()
                    end
                end
            else
                Players.LocalPlayer.Idled:Connect(function()
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton2(Vector2.new())
                end)
            end

            -- Run a controlled loop with delays
            task.spawn(function()
                while getgenv().antiafk do
                    VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    task.wait(1)
                    VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    task.wait(15) -- Wait before repeating
                end
            end)
        end
    end
})


local Toggle = SetTab:CreateToggle({
    Name = "Auto Clicker",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().CLick = Value
        while CLick == true do
                game:GetService("VirtualUser"):ClickButton1(Vector2.new(9e9, 9e9))
                wait(17)
            end
        end,
 })

 local Toggle = SetTab:CreateToggle({
    Name = "Auto Clicker fast",
    CurrentValue = false,
    Flag = "Toggleme", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv().CLick = Value
        while CLick == true do
                game:GetService("VirtualUser"):ClickButton1(Vector2.new(9e9, 9e9))
                wait(0)
            end
        end,
 })

 local Toggle = SetTab:CreateToggle({
    Name = "White Screen",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        getgenv()WS = Value
        if WS == true then
            game:GetService("RunService"):Set3dRenderingEnabled(false)
            elseif WS == false then
                game:GetService("RunService"):Set3dRenderingEnabled(true)
        end
    end,
 })

 local ScreenGui = nil  -- Store the ScreenGui so we can toggle it on/off

local Toggle = SetTab:CreateToggle({
    Name = "Black Screen",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        if Value then
            -- Create the black screen if it doesn't exist
            if not ScreenGui then
                ScreenGui = Instance.new("ScreenGui")
                local Frame = Instance.new("Frame")

                ScreenGui.Parent = game.CoreGui
                ScreenGui.IgnoreGuiInset = true  

                Frame.Parent = ScreenGui
                Frame.Size = UDim2.new(1, 0, 1, 0)
                Frame.Position = UDim2.new(0, 0, 0, 0)
                Frame.BackgroundColor3 = Color3.new(0, 0, 0)
                Frame.BorderSizePixel = 0  
            end
        else
            -- Remove the black screen if it exists
            if ScreenGui then
                ScreenGui:Destroy()
                ScreenGui = nil
            end
        end
    end,
})

repeat wait() until game:IsLoaded()
wait(2)

-- Create GUI Elements
local ScreenGui = Instance.new("ScreenGui")

local Fps = Instance.new("TextLabel")
local Ping = Instance.new("TextLabel")

-- FPS at the Upper Right (Lowered)
Fps.Name = "Fps"
Fps.BackgroundTransparency = 1.0
Fps.Position = UDim2.new(1, -130, 0, 30) -- Moved down from 5 to 30
Fps.Size = UDim2.new(0, 125, 0, 25)
Fps.Font = Enum.Font.SourceSans
Fps.TextColor3 = Color3.fromRGB(255, 255, 255)
Fps.TextScaled = true
Fps.Text = ""

-- Ping at the Upper Left (Lowered)
Ping.Name = "Ping"
Ping.BackgroundTransparency = 1.0
Ping.Position = UDim2.new(0, 5, 0, 30) -- Moved down from 5 to 30
Ping.Size = UDim2.new(0, 125, 0, 25)
Ping.Font = Enum.Font.SourceSans
Ping.TextColor3 = Color3.fromRGB(253, 253, 253)
Ping.TextScaled = true
Ping.Text = ""

-- Parent AFTER setting properties to avoid "Label"
Fps.Parent = ScreenGui
Ping.Parent = ScreenGui
ScreenGui.Parent = game.CoreGui

-- Toggleable FPS & Ping Display
local RunService = game:GetService("RunService")
getgenv().DisplayStats = false

local function UpdateStats()
    while getgenv().DisplayStats do
        local fpsValue = math.round(1 / RunService.RenderStepped:Wait())
        local pingValue = math.round(game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())

        Fps.Text = "FPS: " .. fpsValue
        Ping.Text = "Ping: " .. pingValue

        task.wait(0.5)
    end

    -- Hide text when disabled
    Fps.Text = ""
    Ping.Text = ""
end

-- Toggle UI
local Toggle = SetTab:CreateToggle({ 
    Name = "Show FPS & Ping", 
    CurrentValue = false,
    Flag = "FPS&PING", 
    Callback = function(Value)
        getgenv().DisplayStats = Value
        if Value then
            task.spawn(UpdateStats)
        end
    end,
})



local Button = SetTab:CreateButton({
    Name = " Fake Ban Message",
    Callback = function()
        local player = game.Players.LocalPlayer
        local starterGui = game:GetService("StarterGui")
        
        -- Display fake ban message
        starterGui:SetCore("SendNotification", {
            Title = "YOU HAVE BEEN BANNED!",
            Text = "EXPLOITS DETECTED!",
            Duration = 3
        })
        
        -- Wait 3 seconds, then change the message
        task.wait(6)

        starterGui:SetCore("SendNotification", {
            Title = "Just kidding",
            Text = "[Asaiya Script]",
            Duration = 3
        })

        -- Kick the player after showing the fake ban
        task.wait(1) -- Give a slight delay before kicking
        player:Kick("YOU HAVE BEEN BANNED! EXPLOITS DETECTED!")
    end,
})

 

       



 local Dropdown = BloodTab:CreateDropdown({
    Name = "Select Island",
    Options = {"Lobby","[1] Hercules", "[2] Ares", "[3] Poseidon", "[4] Hades", "[5] Athena", "[6] Zeus", "[7] Cronus", "[8] Robots","[9], Bugs", "[10] Cyber", "[11] Divinities","[12] Egyptians", "[13] Hollowed", "[14] The Trial","[15] The End"},
    CurrentOption = {"Lobby"},
    MultipleOptions = false,
    Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Options)
        local TweenService = game:GetService("TweenService")
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Check which option is selected
        if Options[1] == "[1] Hercules" then
            -- Teleport to Hercules' position
            local targetPosition = Vector3.new(2147, -61, 1881)

            local tweenInfo = TweenInfo.new(
                0.5, -- Duration (seconds)
                Enum.EasingStyle.Linear, -- Easing style
                Enum.EasingDirection.Out, -- Easing direction
                0, -- Number of times to repeat
                false, -- Whether to reverse after completion
                0 -- Delay before starting
            )

            local goal = { Position = targetPosition }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
            wait(0.5)

        elseif Options[1] == "[2] Ares" then
            -- Teleport to Ares' position
            local targetCFrame = CFrame.new(5218.5, -60.5, 1713.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)

            local tweenInfo = TweenInfo.new(
                0.8, -- Duration (seconds)
                Enum.EasingStyle.Linear, -- Easing style
                Enum.EasingDirection.Out, -- Easing direction
                0, -- Number of times to repeat
                false, -- Whether to reverse after completion
                0 -- Delay before starting
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[3] Poseidon" then
            -- Teleport to Ares' position
            local targetCFrame = CFrame.new(7903.5, -60.5, 1881, 0, 0, -1, 0, 1, 0, 1, 0, 0)

            local tweenInfo = TweenInfo.new(
                0.8, -- Duration (seconds)
                Enum.EasingStyle.Linear, -- Easing style
                Enum.EasingDirection.Out, -- Easing direction
                0, -- Number of times to repeat
                false, -- Whether to reverse after completion
                0 -- Delay before starting
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[4] Hades" then
            -- Teleport to Ares' position
            local targetCFrame = CFrame.new(10063.6484, -39.5004883, 1881.50012, 1, 0, 0, 0, 1, 0, 0, 0, 1)

            local tweenInfo = TweenInfo.new(
                0.8, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out,
                0,
                false,
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[5] Athena" then
            local targetCFrame = CFrame.new(12438.1592, -19.859026, 1580.67932, 0, 0, 1, 0, 1, -0, -1, 0, 0)

            local tweenInfo = TweenInfo.new(
                0.8, 
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out, 
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[6] Zeus" then
            
            local targetCFrame = CFrame.new(15797, -58.5, 1893.5, 0, 0, -1, 0, 1, 0, 1, 0, 0)

            local tweenInfo = TweenInfo.new(
                0.8, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out,
                0,
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[7] Cronus" then
            
            local targetCFrame = CFrame.new(18437, -61, 1893.5, 0, 0, 1, 0, 1, -0, -1, 0, 0)

            local tweenInfo = TweenInfo.new(
                0.8, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out,
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[8] Robots" then
            
            local targetCFrame = CFrame.new(20560, -56.9952087, 2152, 0, 0, 1, -1, 0, 0, 0, -1, 0)

            local tweenInfo = TweenInfo.new(
                0.8, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out,
                0, 
                false,
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[9] Bugs" then
            
            local targetCFrame = CFrame.new(23200.7305, -56.992157, 2152.69604, 0, 0, 1, -1, 0, 0, 0, -1, 0)

            local tweenInfo = TweenInfo.new(
                1, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out, 
                0, 
                false,
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[10] Cyber" then
            
            local targetCFrame = CFrame.new(25907, -60.9952087, 1708.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)

            local tweenInfo = TweenInfo.new(
                1.3,
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out, 
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[11] Divinities" then
            
            local targetCFrame = CFrame.new(28547, -60.9952087, 1708.5, 1, 0, 0, 0, 1, 0, 0, 0, 1)

            local tweenInfo = TweenInfo.new(
                1.5, 
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.Out,
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[12] Egyptians" then
            local targetCFrame = CFrame.new(31187, -60.9952087, 1580.99988, 1, 0, 0, 0, 1, 0, 0, 0, 1)

            local tweenInfo = TweenInfo.new(
                1.9, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out, 
                0,
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[13] Hollowed" then
            
            local targetCFrame = CFrame.new(33787.8477, -60.9821472, 2181.17993, -1, 0, 0, 0, 1, 0, 0, 0, -1)

            local tweenInfo = TweenInfo.new(
                2.3, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out, 
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[14] The Trial" then
            
            local targetCFrame = CFrame.new(36832, -60.9952087, 1880.99988, -1, 0, 0, 0, 1, 0, 0, 0, -1)

            local tweenInfo = TweenInfo.new(
                2.7,
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out,
                0,
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        elseif Options[1] == "[15] The End" then
            
            local targetCFrame = CFrame.new(39601, -60.9952087, 1766, -1, 0, 0, 0, 1, 0, 0, 0, -1)

            local tweenInfo = TweenInfo.new(
                3, 
                Enum.EasingStyle.Linear, 
                Enum.EasingDirection.Out, 
                0, 
                false, 
                0 
            )

            local goal = { CFrame = targetCFrame }
            local tween = TweenService:Create(humanoidRootPart, tweenInfo, goal)
            tween:Play()
        end
    end,
})

local player = game.Players.LocalPlayer
local tweenService = game:GetService("TweenService")
local starterGui = game:GetService("StarterGui")

local attacking = false
local activeNPCs = {}
local humanoidRootPart

local function onCharacterAdded(character)
    humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
    if humanoidRootPart then
        print("✅ HumanoidRootPart found after respawn.")
    else
        warn("❌ HumanoidRootPart not found after respawn.")
    end
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end

local npcData = {
    {name = "LIEUTENANT", flag = "Toggle21", positions = {
        CFrame.new(1750, -57.5004883, 1882.00024),
        CFrame.new(2442, -57.5004883, 1870.00024)
    }},
    {name = "KNIGHT", flag = "Toggle22", positions = {
        CFrame.new(5116, -57.5004883, 1850.00024),
        CFrame.new(5006, -57.5004883, 1670.00024)
    }},
    {name = "BARON", flag = "Toggle23", positions = {
        CFrame.new(7258.40039, -57.5004883, 1694.07031),
        CFrame.new(7580, -57.5004883, 1902.0802)
    }},
    {name = "COUNT", flag = "Toggle24", positions = {
        CFrame.new(10069.1484, -57.5004883, 2283.63013),
        CFrame.new(9942.18848, -57.800293, 1490.21021)
    }},
    {name = "MARQUIS", flag = "Toggle25", positions = {
        CFrame.new(12301.7012, -57.5004883, 1887.00024),
        CFrame.new(12879.7617, -57.5004883, 1642.82019)
    }},
    {name = "GRAND DUKE", flag = "Toggle26", positions = {
        CFrame.new(15551.2803, -54.5004883, 2091.14014),
        CFrame.new(15097, -54.5004883, 1925.00024)
    }},
    {name = "ARCH DUKE", flag = "Toggle27", positions = {
        CFrame.new(18350.7109, -57.6010742, 1898.51025),
        CFrame.new(17671.1699, -57.6547852, 1983.44019)
    }},
    {name = "DEMI DEITY", flag = "Toggle28", positions = {
        CFrame.new(20583.1621, -57.6010742, 1682.76025),
        CFrame.new(20628, -57.6547852, 2078.58008)
    }},
    {name = "ELITE DEITY", flag = "Toggle29", positions = {
        CFrame.new(23003.7715, -57.6010742, 1751.23022),
        CFrame.new(23102.6309, -57.6547852, 1921.6499)
    }},
    {name = "MYTHIC DEITY", flag = "Toggle30", positions = {
        CFrame.new(25832.8418, -57.6010742, 1829.26013),
        CFrame.new(25604.8125, -57.6547852, 2188.09009)
    }},
}  

local function StartAttacking()
    while attacking do
        local character = player.Character
        if not character then return end
        local footTool = character:FindFirstChild("Foot") or player.Backpack:FindFirstChild("Foot")
        if footTool then
            footTool.Parent = character
            task.wait(0.2)
            footTool:Activate()
        else
            warn("⚠ 'Foot' not found! Using fallback mouse click.")
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
        end
        task.wait(0.3)
    end
end

local function MoveAndAttack()
    task.spawn(StartAttacking)
    
    while attacking do
        local positions = {}
        for _, npc in ipairs(activeNPCs) do
            for _, pos in ipairs(npc.positions) do
                table.insert(positions, pos)
            end
        end
        
        for _, pos in ipairs(positions) do
            if not attacking then return end
            humanoidRootPart.CFrame = pos
            task.wait(1.5)
        end
    end
end

for _, npc in ipairs(npcData) do
    local success, err = pcall(function()
        BloodTab:CreateToggle({
            Name = npc.name,
            CurrentValue = false,
            Flag = npc.flag,
            Callback = function(Value)
                if Value then
                    if #activeNPCs >= 2 then
                        starterGui:SetCore("SendNotification", {
                            Title = "Bloodline Notification",
                            Text = "Only 2 Maximum Toggles may be turned on",
                            Duration = 5
                        })
                        return
                    end
                    table.insert(activeNPCs, npc)
                    attacking = true
                    MoveAndAttack()
                else
                    for i, active in ipairs(activeNPCs) do
                        if active.name == npc.name then
                            table.remove(activeNPCs, i)
                            break
                        end
                    end
                    if #activeNPCs == 0 then
                        attacking = false
                    end
                end
            end,
        })
    end)

    if not success then
        warn("⚠ Error creating toggle for " .. npc.name .. ": " .. err)
    end
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to teleport to a chosen player
local function TeleportToPlayer(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
        
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
        end
    end
end

-- Create the dropdown with player names
local function UpdateDropdown()
    local playerNames = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then  -- Exclude local player
            table.insert(playerNames, player.Name)
        end
    end

    local Dropdown = PlayerTab:CreateDropdown({
        Name = "Teleport to Player",
        Options = playerNames,
        CurrentOption = {},
        MultipleOptions = false,
        Flag = "Dropdown1",
        Callback = function(Options)
            if Options[1] then
                TeleportToPlayer(Options[1])
            end
        end,
    })
end

local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- Death Immunity Zone Position
local ImmunityZone = Vector3.new(-634.5390625, -53.9104830932617, 1859.409912109371)
local ImmunityRadius = 5 -- Adjust if needed

-- Function to Check if a Player is in the Immunity Zone
local function isInImmunityZone(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local distance = (player.Character.HumanoidRootPart.Position - ImmunityZone).Magnitude
        return distance <= ImmunityRadius
    end
    return false
end

-- Function to Equip "Foot"
local function equipFoot()
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    if backpack then
        local footTool = backpack:FindFirstChild("Foot")
        if footTool then
            LocalPlayer.Character.Humanoid:EquipTool(footTool)
        end
    end
end

-- Function to Get Player's Stage Level
local function getStage(player)
    if player and player:FindFirstChild("leaderstats") then
        local stage = player.leaderstats:FindFirstChild("Stage")
        return stage and stage.Value or 0
    end
    return 0
end

-- Auto Attack & Teleport Loop
local function attackAndTeleportLoop()
    while getgenv().AutoFarm do
        -- Equip "Foot"
        equipFoot()

        -- Auto Click M1
        VirtualUser:ClickButton1(Vector2.new(9e9, 9e9))

        -- Find and Teleport to a Weaker Player
        local myStage = getStage(LocalPlayer)
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetStage = getStage(player)

                if targetStage < myStage and not isInImmunityZone(player) then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                    task.wait(3) -- Wait 3 seconds before teleporting to another player
                    break
                end
            end
        end

        task.wait(0.1) -- Adjust attack speed
    end
end

-- Single Toggle for Auto Farm (Attack + Teleport)
local ToggleAutoFarm = PlayerTab:CreateToggle({
    Name = "Auto Attack & Teleport",
    CurrentValue = false,
    Flag = "Toggle1",
    Callback = function(Value)
        getgenv().AutoFarm = Value
        if Value then
            task.spawn(attackAndTeleportLoop) -- Start the loop
        end
    end,
})








-- Update dropdown when players join/leave
Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

-- Initial population of the dropdown
UpdateDropdown()



















-- Paragraph:
local Paragraph = MiscTab:CreateParagraph({Title = "Join our Discord Server!", Content = "https://discord.gg/A2mNjt4BAY"})
local Paragraph = MiscTab:CreateParagraph({Title = "Asaiya Sell if Full", Content = "Gains muscle, and Automatically sells if FULL DNA"})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Click (No Gamepass)", Content = "Normal Speed Auto Clicker"})
local Paragraph = MiscTab:CreateParagraph({Title = "Gamepass TIPS", Content = "If you use my script 24/7, you only need to get 2x COINS and 2x MUSCLE gamepasses."})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Click (Fast Clicker Gamepass)", Content = "Lifting speed is the same as having Fast Lifter Gamepass"})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Sell", Content = "Every 3 seconds, muscle will sell even without going to sell circle."})
local Paragraph = MiscTab:CreateParagraph({Title = "Buy Smart DNA", Content = "Will ONLY buy the DNA enough to get to next stage to save coins"})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Body Alter", Content = "Auto buy new Body Alter (Stage)"})
local Paragraph = MiscTab:CreateParagraph({Title = "Bloodline Autofarm", Content = "Teleports you to the small enemies and auto stomps them so you can get bloodline points."})
local Paragraph = MiscTab:CreateParagraph({Title = "Anti AFK KICK", Content = "You will not be kicked after 20 minutes of inactivity"})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Clicker", Content = "Auto Clicks your screen every 17 seconds"})
local Paragraph = MiscTab:CreateParagraph({Title = "Auto Clicker FAST", Content = "Auto Clicks your screen every milissecond"})
local Paragraph = MiscTab:CreateParagraph({Title = "White Screen", Content = "Turns your screen to white to save FPS"})
local Paragraph = MiscTab:CreateParagraph({Title = "Black Screen", Content = "Covers your ENTIRE screen With Pitch Black to save FPS"})
local Paragraph = MiscTab:CreateParagraph({Title = "Teleport to Player", Content = "Literally teleports you to the player"})
local Paragraph = MiscTab:CreateParagraph({Title = "Kill Player", Content = "Teleports to players whose stages are lower than yours"})
local Paragraph = MiscTab:CreateParagraph({Title = "Credit of the script goes to", Content = "Asaiya(Plan), Kiretsuki(Tester), Uron(Coder), and Raizel(Funds)"})
local Paragraph = MiscTab:CreateParagraph({Title = "UI Belongs to", Content = "Rayfield"})
local Paragraph = BloodTab:CreateParagraph({Title = "Bloodline", Content = "You can farm two bloodline at once"})
    end)
end

-- Create ScreenGui for Key Input
local KeyScreenGui = Instance.new("ScreenGui")
KeyScreenGui.Parent = game.CoreGui
KeyScreenGui.ResetOnSpawn = false

local KeyFrame = Instance.new("Frame")
KeyFrame.Size = UDim2.new(0, 400, 0, 150)
KeyFrame.Position = UDim2.new(0.5, -200, 0.5, -75)
KeyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
KeyFrame.BorderSizePixel = 2
KeyFrame.Parent = KeyScreenGui

local KeyLabel = Instance.new("TextLabel")
KeyLabel.Size = UDim2.new(1, 0, 0.3, 0)
KeyLabel.Position = UDim2.new(0, 0, 0, 0)
KeyLabel.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
KeyLabel.Text = "ASAIYA SCRIPTKEY SYSTEM"
KeyLabel.TextSize = 20
KeyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyLabel.Parent = KeyFrame

local KeyInput = Instance.new("TextBox")
KeyInput.Size = UDim2.new(1, -20, 0.3, 0)
KeyInput.Position = UDim2.new(0, 10, 0.35, 0)
KeyInput.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
KeyInput.Text = ""
KeyInput.TextSize = 20
KeyInput.TextColor3 = Color3.fromRGB(0, 0, 0)
KeyInput.Parent = KeyFrame

local KeyInfo = Instance.new("TextLabel")
KeyInfo.Size = UDim2.new(1, 0, 0.3, 0)
KeyInfo.Position = UDim2.new(0, 0, 0.7, 0)
KeyInfo.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
KeyInfo.Text = "KEY IS ONLY AVAILABLE AT\nhttps://discord.gg/A2mNjt4BAY"
KeyInfo.TextSize = 16
KeyInfo.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInfo.Parent = KeyFrame

local ErrorMessage = Instance.new("TextLabel")
ErrorMessage.Size = UDim2.new(1, 0, 0.2, 0)
ErrorMessage.Position = UDim2.new(0, 0, 0.55, 0)
ErrorMessage.BackgroundTransparency = 1
ErrorMessage.Text = ""
ErrorMessage.TextSize = 18
ErrorMessage.TextColor3 = Color3.fromRGB(255, 0, 0)
ErrorMessage.Parent = KeyFrame

KeyInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local isValid = false
        for _, key in ipairs(validKeys) do
            if KeyInput.Text == key then
                isValid = true
                break
            end
        end
        
        if isValid then
            KeyScreenGui:Destroy()
            showOptionsGui()
        else
            ErrorMessage.Text = "WRONG KEY!"
            task.delay(2, function()
                ErrorMessage.Text = ""
            end)
        end
    end
end)











































